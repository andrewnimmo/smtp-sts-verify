
### transport/30_exim4-config_remote_smtp
#################################
# This transport is used for delivering messages over SMTP connections.

remote_smtp:
  debug_print = "T: remote_smtp for $local_part@$domain"
  driver = smtp
.ifdef REMOTE_SMTP_HOSTS_AVOID_TLS
  hosts_avoid_tls = REMOTE_SMTP_HOSTS_AVOID_TLS
.endif
.ifdef REMOTE_SMTP_HEADERS_REWRITE
  headers_rewrite = REMOTE_SMTP_HEADERS_REWRITE
.endif
.ifdef REMOTE_SMTP_RETURN_PATH
  return_path = REMOTE_SMTP_RETURN_PATH
.endif
.ifdef REMOTE_SMTP_HELO_DATA
  helo_data=REMOTE_SMTP_HELO_DATA
.endif
.ifdef DKIM_DOMAIN
dkim_domain = DKIM_DOMAIN
.endif
.ifdef DKIM_SELECTOR
dkim_selector = DKIM_SELECTOR
.endif
.ifdef DKIM_PRIVATE_KEY
dkim_private_key = DKIM_PRIVATE_KEY
.endif
.ifdef DKIM_CANON
dkim_canon = DKIM_CANON
.endif
.ifdef DKIM_STRICT
dkim_strict = DKIM_STRICT
.endif
.ifdef DKIM_SIGN_HEADERS
dkim_sign_headers = DKIM_SIGN_HEADERS
.endif
.ifdef TLS_DH_MIN_BITS
tls_dh_min_bits = TLS_DH_MIN_BITS
.endif
.ifdef REMOTE_SMTP_TLS_CERTIFICATE
tls_certificate = REMOTE_SMTP_TLS_CERTIFICATE
.endif
.ifdef REMOTE_SMTP_PRIVATEKEY
tls_privatekey = REMOTE_SMTP_PRIVATEKEY
.endif
 tls_try_verify_hosts = * 
 tls_verify_certificates = /etc/ssl/certs/ca-certificates.crt
 #headers_add = "X-smtp-sts-receiver-MX-cipher: $tls_out_cipher"
 #headers_add = "X-smtp-sts-receiver-MX-cert-subject: ${certextract{subject}{$tls_out_peercert}{$value}{none}}"
 #headers_add = "X-smtp-sts-receiver-MX-cert-sha256: ${sha256:$tls_out_peercert}"
 #headers_add = "X-smtp-sts-receiver-TXT: \"${lookup dnsdb{>: dnssec_lax,txt=_smtp-sts.$domain}{$value}{Failed: receiver has no TXT _smtp-sts.$domain}}\"; DNSSEC:$lookup_dnssec_authenticated"
 #headers_add = "X-smtp-sts-receiver-DNSSEC: ${lookup dnsdb{dnssec_lax,mx=$domain}{${if eq {$lookup_dnssec_authenticated}{yes}{yes}{no}}}{NOK}}"
 #headers_add = "X-smtp-sts-receiver-verify: ${run{/usr/local/bin/verify.py -d $domain}{OK:$value}{ FAILED}}"
 #headers_add = "X-smtp-sts-receiver-verify2: ${run{/usr/local/bin/verify2.py -d $domain -s \"${lookup dnsdb{>: dnssec_lax,txt=_smtp-sts.$domain}{$value}{Failed: receiver has no TXT _smtp-sts.$domain}}\" -m $host ${if eq {$lookup_dnssec_authenticated}{yes}{yes}{no}{-D}{}}{GOOD: $value}{BAD: $value}} "
 #headers_add = "X-smtp-sts-receiver-MX: ${lookup dnsdb{mx=$domain}{$value}{No MX ????}}"
 headers_add = "X-smtp-sts-receiver-MX: \"${lookup dnsdb{>: dnssec_lax,mxh=$domain}{$value}{foo}}\"; DNSSEC: $lookup_dnssec_authenticated"
 headers_add = "X-smtp-sts-receiver-verify: SMTP_STS_DOMAIN_VERIFY"
 headers_add = "X-smtp-sts-receiver-MX-cert: ${if eq {$tls_out_certificate_verified}{1}{VERIFIED; Issuer: ${certextract{issuer}{$tls_out_peercert}{$value}{none}}}{no}}"

#vim:ft=exim
